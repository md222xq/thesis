[
  {
    "test": 1,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152.sol_airPort.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "87.6479s"
  },
  {
    "test": 2,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol_Owned.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: reentrancy"
    },
    "time_taken": "3.1544s"
  },
  {
    "test": 3,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol_tokenRecipient.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: SAFE\nVulnerability Type: N/A"
    },
    "time_taken": "1.7470s"
  },
  {
    "test": 4,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_time_manipulation_ether_lotto.sol_EtherLotto.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe `play()` function contains a reentrancy vulnerability. The function modifies the state variable `stor_a` based on the value of `msg.value`, and then calls the `bank()` function with a gas limit that is determined by `!stor_a - 0x01`. If an attacker were to repeatedly call the `play()` function with a"
    },
    "time_taken": "5.4150s"
  },
  {
    "test": 5,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol_Puppet.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls\n\nThe smart contract contains a function `withdraw` that calls the low-level `.call` method on an address retrieved from a mapping. The called address is not verified, and the callee can execute arbitrary code, potentially leading to reentrancy attacks or other security issues."
    },
    "time_taken": "4.9189s"
  },
  {
    "test": 6,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_ERC721.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7389s"
  },
  {
    "test": 7,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_incorrect_constructor_name3.sol_Missing.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "2.6040s"
  },
  {
    "test": 8,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol_Marriage.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "1.0510s"
  },
  {
    "test": 9,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol_Splitter.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE. This contract does not have any vulnerabilities that could be exploited by the users.\n\nVulnerability Type: None. The contract is written in a secure way, and there are no known vulnerabilities that can be exploited by the users."
    },
    "time_taken": "6.9866s"
  },
  {
    "test": 10,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol_LogFile.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "8.0638s"
  },
  {
    "test": 11,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x70f9eddb3931491aab1aeafbc1e7f1ca2a012db4.sol_HomeyJar.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "3.8247s"
  },
  {
    "test": 12,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_modifier_reentrancy.sol_ModifierEntrancy.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "3.3047s"
  },
  {
    "test": 13,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xd5967fed03e85d1cce44cab284695b41bc675b5c.sol_demo.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: reentrancy"
    },
    "time_taken": "3.3153s"
  },
  {
    "test": 14,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_reentrancy_bonus.sol_Reentrancy_bonus.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "2.4426s"
  },
  {
    "test": 15,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: SAFE\nVULNERABILITY_TYPE: unchecked_low_level_calls"
    },
    "time_taken": "7.6991s"
  },
  {
    "test": 16,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_etherstore.sol_EtherStore.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls\n\nThe smart contract contains several unchecked low-level calls, which can lead to arbitrary code execution. In the `withdrawFunds` function, the contract makes an external call to `msg.sender`, without any checks on the callee's identity or the validity of the data returned. This could allow an attacker to exploit the contract by calling it"
    },
    "time_taken": "6.4499s"
  },
  {
    "test": 17,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xbaa3de6504690efb064420d89e871c27065cdd52.sol_Proxy.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "2.7743s"
  },
  {
    "test": 18,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_spank_chain_payment.sol_ECTools.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "0.9580s"
  },
  {
    "test": 19,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol_PRIVATE_ETH_CELL.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "4.8213s"
  },
  {
    "test": 20,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_SiringClockAuction.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "0.9300s"
  },
  {
    "test": 21,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_unchecked_return_value.sol_ReturnValue.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "2.3840s"
  },
  {
    "test": 22,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xd2018bfaa266a9ec0a1a84b061640faa009def76.sol_Pie.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Other\n\nThe smart contract code is decompiled, and it contains a few functions with low-level EVM assembly. The vulnerabilities in the code are not immediately apparent from the decompiled source code. Therefore, I will have to analyze the bytecode of the compiled contract to identify potential security issues.\n\nTo do this, I will use the `heimdall` tool, which is a solid"
    },
    "time_taken": "6.9821s"
  },
  {
    "test": 23,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol_W_WALLET.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "4.0184s"
  },
  {
    "test": 24,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_blackjack.sol_BlackJack.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "1.2406s"
  },
  {
    "test": 25,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_front_running_FindThisHash.sol_FindThisHash.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls\n\nThe `solve` function in the decompiled contract contains a vulnerable low-level call to `address(msg.sender).call{ gas: !0x3635c9adc5dea00000 * 0x08fc, value: 0x3635c9adc5dea0"
    },
    "time_taken": "6.2845s"
  },
  {
    "test": 26,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x806a6bd219f162442d992bdc4ee6eba1f2c5a707.sol_Pie.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: VULNERABLE\n\nVulnerability Type: Reentrancy\n\nThe smart contract contains a reentrancy vulnerability in the `withdraw` function. The function first sets the `stor_a` variable to a specific address, and then checks if the sender is that address. If the condition is true, it calls the `call` function on the `stor_a` address, which could result in reentrancy if the"
    },
    "time_taken": "7.1640s"
  },
  {
    "test": 27,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_insecure_transfer.sol_IntegerOverflowAdd.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "2.6109s"
  },
  {
    "test": 28,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_reentrancy_insecure.sol_Reentrancy_insecure.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: reentrancy"
    },
    "time_taken": "1.6130s"
  },
  {
    "test": 29,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x3e013fc32a54c4c5b6991ba539dcd0ec4355c859.sol_MultiplicatorX4.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe smart contract contains a reentrancy vulnerability in the `withdraw` function, which can be exploited by an attacker to drain all funds from the contract. The vulnerability is caused by the fact that the function calls the `call` method on the address stored in the `stor_a` variable, without checking the result of the call or ensuring that it"
    },
    "time_taken": "6.9641s"
  },
  {
    "test": 30,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_parity_wallet_bug_2.sol_WalletEvents.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7181s"
  },
  {
    "test": 31,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_reentrance.sol_Reentrance.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: No vulnerabilities found in the given smart contract."
    },
    "time_taken": "3.1430s"
  },
  {
    "test": 32,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol_TokenBank.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "6.2855s"
  },
  {
    "test": 33,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: SAFE\nVULNERABILITY_TYPE: None"
    },
    "time_taken": "7.8605s"
  },
  {
    "test": 34,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_king_of_the_ether_throne.sol_KingOfTheEtherThrone.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: reentrancy"
    },
    "time_taken": "7.8723s"
  },
  {
    "test": 35,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol_U_BANK.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: none"
    },
    "time_taken": "4.0145s"
  },
  {
    "test": 36,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol_FiftyFlip.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "0.9848s"
  },
  {
    "test": 37,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_BECToken.sol_BecToken.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "11.9487s"
  },
  {
    "test": 38,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_spank_chain_payment.sol_Token.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "1.9032s"
  },
  {
    "test": 39,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol_EtherGet.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "3.3245s"
  },
  {
    "test": 40,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_integer_overflow_add.sol_IntegerOverflowAdd.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.6353s"
  },
  {
    "test": 41,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xdb1c55f6926e7d847ddf8678905ad871a68199d2.sol_FreeEth.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls"
    },
    "time_taken": "4.3036s"
  },
  {
    "test": 42,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_wallet_03_wrong_constructor.sol_Wallet.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "3.3221s"
  },
  {
    "test": 43,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "7.5651s"
  },
  {
    "test": 44,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol_Token.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls\n\nThe smart contract contains an unchecked low-level call to the `WithdrawToken` function, which can lead to potential security issues such as reentrancy attacks. The `WithdrawToken` function calls another contract's `fallback` function with a fixed amount of Ether without checking the caller's balance or whether the transaction was successful. This can allow"
    },
    "time_taken": "6.5857s"
  },
  {
    "test": 45,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol_TokenBank.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "6.9876s"
  },
  {
    "test": 46,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x8c7777c45481dba411450c228cb692ac3d550344.sol_ETH_VAULT.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE.\n\nVulnerability Type: No vulnerabilities detected in the provided smart contract."
    },
    "time_taken": "4.0291s"
  },
  {
    "test": 47,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_SaleClockAuction.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "1.0204s"
  },
  {
    "test": 48,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_denial_of_service_list_dos.sol_Government.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "0.9463s"
  },
  {
    "test": 49,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol_MONEY_BOX.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "5.8589s"
  },
  {
    "test": 50,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x52d2e0f9b01101a59b38a3d05c80b7618aeed984.sol_Token.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: none"
    },
    "time_taken": "1.7530s"
  },
  {
    "test": 51,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol_TokenBank.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability_Type: None"
    },
    "time_taken": "6.6268s"
  },
  {
    "test": 52,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_lottery.sol_Lottery.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls\n\nThe smart contract uses the `call` method in the `makeBet` function, which is a low-level call that can be exploited by malicious users to execute arbitrary code on the blockchain. The vulnerability occurs when an attacker sends a transaction with a specially crafted data payload that causes the contract to make a recursive call to itself, leading to"
    },
    "time_taken": "6.6474s"
  },
  {
    "test": 53,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x39cfd754c85023648bf003bea2dd498c5612abfa.sol_Token.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "2.9821s"
  },
  {
    "test": 54,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_unprotected0.sol_Unprotected.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.8971s"
  },
  {
    "test": 55,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "7.7131s"
  },
  {
    "test": 56,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_denial_of_service_dos_address.sol_DosGas.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "3.4766s"
  },
  {
    "test": 57,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol_Ownable.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE.\n\nVulnerability Type: None."
    },
    "time_taken": "1.7674s"
  },
  {
    "test": 58,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_denial_of_service_dos_simple.sol_DosOneFunc.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "3.1148s"
  },
  {
    "test": 59,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_multiowned_vulnerable.sol_MultiOwnable.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "3.1528s"
  },
  {
    "test": 60,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x561eac93c92360949ab1f1403323e6db345cbf31.sol_BANK_SAFE.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe smart contract has a reentrancy vulnerability in the `Collect` function. The function calls `msg.sender.call{ value: arg0 }(abi.encode())`, which allows an attacker to call the `Collect` function again recursively, causing unintended state changes and potentially draining the contract's balance.\n\nTo fix this vulnerability,"
    },
    "time_taken": "8.2023s"
  },
  {
    "test": 61,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_lucky_doubler.sol_LuckyDoubler.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "8.7252s"
  },
  {
    "test": 62,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x5aa88d2901c68fda244f1d0584400368d2c8e739.sol_MultiplicatorX3.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe provided smart contract has a reentrancy vulnerability in the `multiplicate` function. The function calls another contract's `call` method with a custom gas limit and value, which can lead to an attacker repeatedly calling this function to drain the contract's balance.\n\nThe vulnerability is caused by the fact that the function does not check the return value of"
    },
    "time_taken": "6.8269s"
  },
  {
    "test": 63,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_guess_the_random_number.sol_GuessTheRandomNumberChallenge.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "2.2958s"
  },
  {
    "test": 64,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_spank_chain_payment.sol_HumanStandardToken.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "8.0295s"
  },
  {
    "test": 65,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xec329ffc97d75fe03428ae155fc7793431487f63.sol_Token.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7052s"
  },
  {
    "test": 66,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_random_number_generator.sol_RandomNumberGenerator.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "0.9110s"
  },
  {
    "test": 67,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_proxy.sol_Proxy.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "2.2929s"
  },
  {
    "test": 68,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_BECToken.sol_PausableToken.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: SAFE\nVULNERABILITY TYPE: None"
    },
    "time_taken": "10.9499s"
  },
  {
    "test": 69,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x39cfd754c85023648bf003bea2dd498c5612abfa.sol_TokenBank.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "6.9951s"
  },
  {
    "test": 70,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_time_manipulation_lottopollo.sol_lottopollo.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "2.8121s"
  },
  {
    "test": 71,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_other_crypto_roulette.sol_CryptoRoulette.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: reentrancy"
    },
    "time_taken": "4.0145s"
  },
  {
    "test": 72,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_integer_overflow_minimal.sol_IntegerOverflowMinimal.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7295s"
  },
  {
    "test": 73,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_BECToken.sol_ERC20.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "1.5858s"
  },
  {
    "test": 74,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol_Proxy.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "2.2975s"
  },
  {
    "test": 75,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_rubixi.sol_Rubixi.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "10.0869s"
  },
  {
    "test": 76,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xe4eabdca81e31d9acbc4af76b30f532b6ed7f3bf.sol_Honey.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "3.4881s"
  },
  {
    "test": 77,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xa46edd6a9a93feec36576ee5048146870ea2c3ae.sol_EBU.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "3.1378s"
  },
  {
    "test": 78,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x0cbe050f75bc8f8c2d6c0d249fea125fd6e1acc9.sol_Caller.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls\n\nThe given smart contract is vulnerable to unchecked low-level calls. The `callAddress` function calls the `arg0` address without checking its calldata size, which can lead to unexpected behavior and potential security issues."
    },
    "time_taken": "4.1902s"
  },
  {
    "test": 79,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol_ERC20.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "1.7614s"
  },
  {
    "test": 80,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_token.sol_Token.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "2.4249s"
  },
  {
    "test": 81,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol_WALLET.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "4.4223s"
  },
  {
    "test": 82,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_PandaBase.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "0.9964s"
  },
  {
    "test": 83,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_denial_of_service_auction.sol_DosAuction.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: reentrancy"
    },
    "time_taken": "2.4343s"
  },
  {
    "test": 84,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x2972d548497286d18e92b5fa1f8f9139e5653fd2.sol_demo.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe given smart contract is vulnerable to reentrancy attacks. The `transfer` function calls the `arg1.call{ value: 0 }(abi.encode(...))` function, which can be exploited by an attacker to cause a recursive call to the `transfer` function. This can lead to a denial of service (DoS) attack or even"
    },
    "time_taken": "6.4817s"
  },
  {
    "test": 85,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_integer_overflow_mapping_sym_1.sol_IntegerOverflowMappingSym1.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.8972s"
  },
  {
    "test": 86,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_blackjack.sol_Deck.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.3033s"
  },
  {
    "test": 87,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol_TokenBank.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "6.9151s"
  },
  {
    "test": 88,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol_PrivateDeposit.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: other\n\nThe smart contract has been decompiled using the heimdall-rs decompiler. While it may not compile or be valid solidity code, it should still give a general idea of what each function does. The logic has also been preserved throughout decompiling. However, there are no obvious vulnerabilities in the code."
    },
    "time_taken": "6.8478s"
  },
  {
    "test": 89,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_denial_of_service_dos_number.sol_DosNumber.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "5.2158s"
  },
  {
    "test": 90,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x93c32845fae42c83a70e5f06214c8433665c2ab5.sol_X_WALLET.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe contract contains a reentrancy vulnerability in the `Collect` function. The function calls `msg.sender.call()` with a value of `arg0`, which is not checked for validity or authenticity. This allows an attacker to repeatedly call the `Collect` function and drain the contract's balance.\n\nThe reentrancy vulnerability arises"
    },
    "time_taken": "7.4854s"
  },
  {
    "test": 91,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_incorrect_constructor_name2.sol_Missing.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "2.8146s"
  },
  {
    "test": 92,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_parity_wallet_bug_2.sol_WalletLibrary.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "1.4336s"
  },
  {
    "test": 93,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_ERC20.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7015s"
  },
  {
    "test": 94,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_short_addresses_short_address_example.sol_MyToken.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: reentrancy"
    },
    "time_taken": "2.6139s"
  },
  {
    "test": 95,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol_Ownable.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: reentrancy"
    },
    "time_taken": "2.6202s"
  },
  {
    "test": 96,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_reentrancy_cross_function.sol_Reentrancy_cross_function.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe contract has a reentrancy vulnerability in the `withdrawBalance` function. The function calls the `call` method on the `msg.sender` address, which allows an attacker to call this function again before the previous call completes, resulting in unintended behavior and potential attacks such as draining the contract's balance.\n\nTo fix this vulner"
    },
    "time_taken": "6.1031s"
  },
  {
    "test": 97,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xec329ffc97d75fe03428ae155fc7793431487f63.sol_TokenSender.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked_low_level_calls"
    },
    "time_taken": "8.6277s"
  },
  {
    "test": 98,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_modifier_reentrancy.sol_attack.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "3.1155s"
  },
  {
    "test": 99,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_PandaAccessControl.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "5.0197s"
  },
  {
    "test": 100,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_BECToken.sol_ERC20Basic.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7513s"
  },
  {
    "test": 101,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xf2570186500a46986f3139f65afedc2afe4f445d.sol_RealOldFuckMaker.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "2.4308s"
  },
  {
    "test": 102,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_GeneScienceInterface.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.6331s"
  },
  {
    "test": 103,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol_PoCGame.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe contract has a `play` function that allows users to win or lose Ether based on the result of a random number generated from the blockhash. The issue is that the contract uses `address(this).balance` to determine the pot and calculates the winner's share using `winnersPot() / 0x02`. This creates an attack vector for re"
    },
    "time_taken": "12.7104s"
  },
  {
    "test": 104,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol_DEP_BANK.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "5.0423s"
  },
  {
    "test": 105,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_smart_billions.sol_ERC20.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Other"
    },
    "time_taken": "1.7544s"
  },
  {
    "test": 106,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_etheraffle.sol_Ethraffle_v4b.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE"
    },
    "time_taken": "13.1134s"
  },
  {
    "test": 107,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_lotto.sol_Lotto.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "2.6008s"
  },
  {
    "test": 108,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_BECToken.sol_SafeMath.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: SAFE\nVulnerability Type: N/A"
    },
    "time_taken": "1.9121s"
  },
  {
    "test": 109,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_smart_billions.sol_ERC20Basic.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "0.9334s"
  },
  {
    "test": 110,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xaae1f51cf3339f18b6d3f3bdc75a5facd744b0b8.sol_LogFile.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability_Type: None"
    },
    "time_taken": "7.6477s"
  },
  {
    "test": 111,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_ClockAuctionBase.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: No vulnerabilities detected in the provided smart contract."
    },
    "time_taken": "2.4153s"
  },
  {
    "test": 112,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xb37f18af15bafb869a065b61fc83cfc44ed9cc27.sol_SimpleWallet.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls\n\nThe given smart contract is vulnerable to unchecked low-level calls. In the `withdrawAll` function, the contract makes an external call to withdraw all Ether from the contract without checking if the call was successful or not. This can lead to a situation where the external call fails due to insufficient funds, and the contract is unable to recover from"
    },
    "time_taken": "6.4725s"
  },
  {
    "test": 113,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe contract has a potential reentrancy vulnerability in the `AddMessage` function. The function calls the `keccak256` hash function on the input parameter `arg2`, which is a string, and then uses the result to update the state variable `stor_k`. However, if the length of `arg2` is greater than 0x1f"
    },
    "time_taken": "11.5268s"
  },
  {
    "test": 114,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_ClockAuction.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "1.0409s"
  },
  {
    "test": 115,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol_Ownable.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.5967s"
  },
  {
    "test": 116,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x7b368c4e805c3870b6c49a3f1f49f69af8662cf3.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "7.8438s"
  },
  {
    "test": 117,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_time_manipulation_governmental_survey.sol_Governmental.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "3.3185s"
  },
  {
    "test": 118,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_PandaOwnership.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "1.0577s"
  },
  {
    "test": 119,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xb620cee6b52f96f3c6b253e6eea556aa2d214a99.sol_DrainMe.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "10.0991s"
  },
  {
    "test": 120,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xb0510d68f210b7db66e8c7c814f22680f2b8d1d6.sol_SafeMath.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: N/A"
    },
    "time_taken": "1.7464s"
  },
  {
    "test": 121,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_mycontract.sol_MyContract.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Unchecked_Low_Level_Calls"
    },
    "time_taken": "2.6418s"
  },
  {
    "test": 122,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_simple_suicide.sol_SimpleSuicide.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7337s"
  },
  {
    "test": 123,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e.sol_ERC20Interface.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7247s"
  },
  {
    "test": 124,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839.sol_Token.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls\n\nThe `WithdrawToken` function in the provided smart contract contains an unchecked low-level call to `address.call{value: 0}(abi.encode(0x010000000000000000000000000000000000000"
    },
    "time_taken": "6.6659s"
  },
  {
    "test": 125,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f.sol_ETH_VAULT.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "3.2879s"
  },
  {
    "test": 126,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x524960d55174d912768678d8c606b4d50b79d7b1.sol_Centra4.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE.\n\nVulnerability Type: None.\n\nThe smart contract provided is a decompiled code, and it does not contain any vulnerabilities that I could identify. The functions in the contract are simple and do not have any potential security issues. However, I would like to point out that the decompiled code may not be accurate or complete, as decompilation can sometimes produce incorrect results. Therefore, it is essential to thoroughly review and"
    },
    "time_taken": "6.4725s"
  },
  {
    "test": 127,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x8c7777c45481dba411450c228cb692ac3d550344.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe smart contract is vulnerable to reentrancy attacks through the `AddMessage` function. The function uses the `msg.data` field, which can be manipulated by an attacker to cause recursive calls to the `AddMessage` function. This could lead to unintended behavior and potential exploitation of the contract.\n\nTo mitigate this vulnerability, the"
    },
    "time_taken": "11.3446s"
  },
  {
    "test": 128,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x561eac93c92360949ab1f1403323e6db345cbf31.sol_LogFile.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "7.5248s"
  },
  {
    "test": 129,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_overflow_simple_add.sol_Overflow_Add.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.8999s"
  },
  {
    "test": 130,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_denial_of_service_send_loop.sol_Refunder.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls"
    },
    "time_taken": "2.4625s"
  },
  {
    "test": 131,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_wallet_04_confused_sign.sol_Wallet.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "2.9919s"
  },
  {
    "test": 132,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "7.6389s"
  },
  {
    "test": 133,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_etherpot_lotto.sol_Lotto.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "1.0440s"
  },
  {
    "test": 134,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_time_manipulation_governmental_survey.sol_Attacker.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-level Calls\n\nExplanation:\nThe smart contract has a vulnerability in the `attack` function, where it uses low-level calls to make external calls without properly checking the return value or the callee's address. This can lead to reentrancy attacks and other security issues. Specifically, the line `(bool success, bytes memory ret0) = address(arg"
    },
    "time_taken": "5.4218s"
  },
  {
    "test": 135,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_Ownable.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE.\n\nVulnerability Type: None.\n\nThe smart contract is a simple one that stores an owner address in the `stor_a` state variable, and provides two functions: `owner()` to retrieve the owner address, and `transferOwnership(address)` to transfer ownership to a new address. The `transferOwnership(address)` function has a requirement that the sender must be the current owner of the contract,"
    },
    "time_taken": "5.3279s"
  },
  {
    "test": 136,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_modifier_reentrancy.sol_Bank.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE.\n\nThere are no known vulnerabilities in the provided smart contract code. However, it's important to note that the decompiled code may not be complete or accurate, and there may be vulnerabilities present in the original compiled code that are not reflected in the decompiled version. Additionally, the code has been modified during the decompilation process, which could potentially introduce new vulnerabilities. Therefore, it's always recommended to perform a thorough"
    },
    "time_taken": "5.4964s"
  },
  {
    "test": 137,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_front_running_ERC20.sol_ERC20.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "5.7625s"
  },
  {
    "test": 138,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_mishandled.sol_SendBack.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: VULNERABLE\nVULNERABILITY TYPE: reentrancy"
    },
    "time_taken": "1.7604s"
  },
  {
    "test": 139,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_integer_overflow_1.sol_Overflow.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7421s"
  },
  {
    "test": 140,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_other_name_registrar.sol_NameRegistrar.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Other\n\nThe contract appears to be a decompiled version of an existing smart contract. The vulnerabilities in the original contract may not be present in this decompiled version, as the decompiler may not have been able to accurately reproduce the original code. However, there are some potential vulnerabilities that could be present in this contract:\n\n1. Uninitialized variables: In the `register` function,"
    },
    "time_taken": "6.6487s"
  },
  {
    "test": 141,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_smart_billions.sol_SmartBillions.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "2.4385s"
  },
  {
    "test": 142,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_overflow_single_tx.sol_IntegerOverflowSingleTransaction.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: arithmetic_integer_overflow"
    },
    "time_taken": "3.3033s"
  },
  {
    "test": 143,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_old_blockhash.sol_PredictTheBlockHashChallenge.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "2.6128s"
  },
  {
    "test": 144,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x84d9ec85c9c568eb332b7226a8f826d897e0a4a8.sol_WedIndex.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "1.0496s"
  },
  {
    "test": 145,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol_Token.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe given smart contract is vulnerable to reentrancy attacks. The `WithdrawToken` function calls the `call` function on an external address, which could lead to unpredictable behavior if the called contract modifies its state in a way that triggers the `WithdrawToken` function again. This can cause a recursive call to `WithdrawToken`, leading to unintended"
    },
    "time_taken": "6.6149s"
  },
  {
    "test": 146,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol_StandardToken.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "5.6394s"
  },
  {
    "test": 147,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_reentrancy_dao.sol_ReentrancyDAO.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "2.4050s"
  },
  {
    "test": 148,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol_MY_BANK.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "4.0302s"
  },
  {
    "test": 149,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x9d06cbafa865037a01d322d3f4222fa3e04e5488.sol_Delta.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "5.3951s"
  },
  {
    "test": 150,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_BECToken.sol_StandardToken.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "5.8858s"
  },
  {
    "test": 151,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol_PERSONAL_BANK.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: reentrancy"
    },
    "time_taken": "4.6019s"
  },
  {
    "test": 152,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_multiowned_vulnerable.sol_TestContract.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls\n\nThe smart contract contains several unchecked low-level calls, which can lead to vulnerabilities such as reentrancy attacks. Specifically, the `withdrawAll` function makes a call to an external contract without checking the return value or validating the input parameters. This can allow an attacker to manipulate the state of the contract and drain its funds.\n\nAdd"
    },
    "time_taken": "7.3345s"
  },
  {
    "test": 153,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xec329ffc97d75fe03428ae155fc7793431487f63.sol_Owned.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "3.5254s"
  },
  {
    "test": 154,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_BECToken.sol_Ownable.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7022s"
  },
  {
    "test": 155,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol_LogFile.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: reentrancy"
    },
    "time_taken": "7.9048s"
  },
  {
    "test": 156,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x7a4349a749e59a5736efb7826ee3496a2dfd5489.sol_WhaleGiveaway1.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe smart contract contains several vulnerable functions that can be exploited by an attacker to drain the contract's funds. The most critical vulnerability is the `withdraw` function, which allows anyone to withdraw all the funds in the contract without any authorization or checks. This is a classic example of reentrancy vulnerability, where the contract's balance can be manipulated"
    },
    "time_taken": "7.2808s"
  },
  {
    "test": 157,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xf70d589d76eebdd7c12cc5eec99f8f6fa4233b9e.sol_WhaleGiveaway2.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls\n\nThe smart contract contains unchecked low-level calls, which can lead to vulnerabilities such as reentrancy attacks. Specifically, the `Command` function contains a low-level call to the `arg0` address, which could be exploited by an attacker to manipulate the state of the contract. Additionally, there is no checking or validation of the `arg1"
    },
    "time_taken": "6.7499s"
  },
  {
    "test": 158,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_time_manipulation_roulette.sol_Roulette.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7624s"
  },
  {
    "test": 159,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xf29ebe930a539a60279ace72c707cba851a57707.sol_B.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "2.4271s"
  },
  {
    "test": 160,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol_VaultProxy.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: reentrancy"
    },
    "time_taken": "5.0496s"
  },
  {
    "test": 161,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_front_running_eth_tx_order_dependence_minimal.sol_EthTxOrderDependenceMinimal.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe contract has a reentrancy vulnerability in the `claimReward` function. The `require` statement checks if the sender is the owner, but it does not check if the sender has enough balance to pay the reward. This can be exploited by an attacker who sends a transaction with a large value and triggers the reentrancy vulnerability.\n\n"
    },
    "time_taken": "7.1139s"
  },
  {
    "test": 162,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol_daoPOLSKAtokens.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "0.9727s"
  },
  {
    "test": 163,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_front_running_ERC20.sol_SafeMath.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.8565s"
  },
  {
    "test": 164,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xbaa3de6504690efb064420d89e871c27065cdd52.sol_VaultProxy.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "4.8931s"
  },
  {
    "test": 165,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x01f8c4e3fa3edeb29e514cba738d87ce8c091d3f.sol_LogFile.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability_Type: unchecked_low_level_calls"
    },
    "time_taken": "7.5291s"
  },
  {
    "test": 166,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol_SafeMath.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.6079s"
  },
  {
    "test": 167,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x23a91059fdc9579a9fbd0edc5f2ea0bfdb70deb4.sol_PrivateBank.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Other\n\nThe smart contract is a decompiled contract, which means it has been reversed engineered from the EVM opcodes. The code may not compile or be valid Solidity code, but it should still provide insight into the logic of the original contract. In this case, the contract appears to be a simple token management system with functions for depositing and withdrawing tokens, as well as a minimum depos"
    },
    "time_taken": "7.1065s"
  },
  {
    "test": 168,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x3a0e9acd953ffc0dd18d63603488846a6b8b2b01.sol_Ownable.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "2.4473s"
  },
  {
    "test": 169,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_integer_overflow_mul.sol_IntegerOverflowMul.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7395s"
  },
  {
    "test": 170,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_front_running_odds_and_evens.sol_OddsAndEvens.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls\n\nThe smart contract is vulnerable to unchecked low-level calls, specifically in the `play` function. The contract uses the `.call{gas: !0x18fae27693b40000 * 0x08fc, value: 0x18fae27693b4000"
    },
    "time_taken": "7.8554s"
  },
  {
    "test": 171,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x19cf8481ea15427a98ba3cdd6d9e14690011ab10.sol_MigrationAgent.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.6212s"
  },
  {
    "test": 172,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x4051334adc52057aca763453820cb0e045076ef3.sol_airdrop.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "3.4282s"
  },
  {
    "test": 173,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_simple_dao.sol_SimpleDAO.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: VULNERABLE\nVulnerability Type: reentrancy"
    },
    "time_taken": "3.1371s"
  },
  {
    "test": 174,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xb93430ce38ac4a6bb47fb1fc085ea669353fd89e.sol_PrivateBank.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "3.6656s"
  },
  {
    "test": 175,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol_ERC20Interface.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7531s"
  },
  {
    "test": 176,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol_keepMyEther.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "2.6296s"
  },
  {
    "test": 177,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_smart_billions.sol_StandardToken.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: SAFE\nVULNERABILITY TYPE: None"
    },
    "time_taken": "1.8922s"
  },
  {
    "test": 178,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x7d09edb07d23acb532a82be3da5c17d9d85806b4.sol_PoCGame.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Other"
    },
    "time_taken": "8.5753s"
  },
  {
    "test": 179,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x3f2ef511aa6e75231e4deafc7a3d2ecab3741de2.sol_WhaleGiveaway2.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Other"
    },
    "time_taken": "3.4736s"
  },
  {
    "test": 180,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_BECToken.sol_BasicToken.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "3.3463s"
  },
  {
    "test": 181,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_PandaAuction.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "1.1311s"
  },
  {
    "test": 182,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xcead721ef5b11f1a7b530171aab69b16c5e66b6e.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "8.2783s"
  },
  {
    "test": 183,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol_Private_Bank.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "3.1422s"
  },
  {
    "test": 184,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x39cfd754c85023648bf003bea2dd498c5612abfa.sol_Ownable.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7668s"
  },
  {
    "test": 185,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_smart_billions.sol_BasicToken.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7028s"
  },
  {
    "test": 186,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x7541b76cb60f4c60af330c208b0623b7f54bf615.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "8.3846s"
  },
  {
    "test": 187,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_time_manipulation_timed_crowdsale.sol_TimedCrowdsale.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7461s"
  },
  {
    "test": 188,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_etherbank.sol_EtherBank.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "2.6200s"
  },
  {
    "test": 189,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_Pausable.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "3.1397s"
  },
  {
    "test": 190,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x958a8f594101d2c0485a52319f29b2647f2ebc06.sol_Owned.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls\n\nThe `execute` function in the smart contract makes unchecked low-level calls to other contracts. This can lead to vulnerabilities such as reentrancy attacks, where an attacker exploits the state changes of a called contract to manipulate the execution flow of the calling contract. In this case, the `execute` function is vulnerable to reentrancy attacks"
    },
    "time_taken": "6.6265s"
  },
  {
    "test": 191,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x89c1b3807d4c67df034fffb62f3509561218d30b.sol_TownCrier.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "1.0404s"
  },
  {
    "test": 192,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_ERC721Metadata.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "2.6134s"
  },
  {
    "test": 193,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xe894d54dca59cb53fe9cbc5155093605c7068220.sol_airDrop.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "3.3246s"
  },
  {
    "test": 194,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_integer_overflow_multitx_onefunc_feasible.sol_IntegerOverflowMultiTxOneFuncFeasible.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7524s"
  },
  {
    "test": 195,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xf015c35649c82f5467c9c74b7f28ee67665aad68.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "8.0185s"
  },
  {
    "test": 196,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_PandaBreeding.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "1.0784s"
  },
  {
    "test": 197,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0xb5e1b1ee15c6fa0e48fce100125569d430f1bd12.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "1.7396s"
  },
  {
    "test": 198,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_bad_randomness_smart_billions.sol_SafeMath.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: VULNERABLE\nVULNERABILITY TYPE: unchecked_low_level_calls"
    },
    "time_taken": "1.8865s"
  },
  {
    "test": 199,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_other_open_address_lottery.sol_OpenAddressLottery.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Reentrancy\n\nThe given smart contract code contains a vulnerability known as \"reentrancy\". This occurs when a contract calls another contract, which then calls back into the original contract. If the called contract modifies its state in a way that affects the outcome of the original contract's execution, this can lead to unexpected behavior or attacks.\n\nIn the given code, there is a function `"
    },
    "time_taken": "7.5392s"
  },
  {
    "test": 200,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xe09b1ab8111c2729a76f16de96bc86a7af837928.sol_ERC20Interface.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "1.8869s"
  },
  {
    "test": 201,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xbebbfe5b549f5db6e6c78ca97cac19d1fb03082c.sol_Proxy.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-level Calls\n\nThe smart contract contains a function called `proxy` that calls another contract's functions using low-level calls. However, the function does not check the return values of these calls, which could lead to unexpected behavior or errors. Additionally, the function uses bitwise operations to manipulate the return values, which could lead to integer overflows and other issues.\n\nTherefore,"
    },
    "time_taken": "5.6216s"
  },
  {
    "test": 202,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_BECToken.sol_Pausable.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-level Calls"
    },
    "time_taken": "4.0017s"
  },
  {
    "test": 203,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x4a66ad0bca2d700f11e1f2fc2c106f7d3264504c.sol_EBU.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "3.1335s"
  },
  {
    "test": 204,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x4e73b32ed6c35f570686b89848e5f39f20ecc106.sol_LogFile.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: none"
    },
    "time_taken": "7.5280s"
  },
  {
    "test": 205,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_spank_chain_payment.sol_StandardToken.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "4.8567s"
  },
  {
    "test": 206,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xa1fceeff3acc57d257b917e30c4df661401d6431.sol_AirDropContract.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: none"
    },
    "time_taken": "3.3363s"
  },
  {
    "test": 207,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x4320e6f8c05b27ab4707cd1f6d5ce6f3e4b3a5a1.sol_ACCURAL_DEPOSIT.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "5.2167s"
  },
  {
    "test": 208,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x610495793564aed0f9c7fc48dc4c7c9151d34fd6.sol_SimpleWallet.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe provided contract is vulnerable to reentrancy attacks due to the use of unprotected direct calls. The `withdrawAll` function makes a direct call to the `msg.sender` without checking the result or updating any state variables, which can lead to infinite recursion and unintended behavior. Additionally, the `sendMoney` function also makes a direct call to `arg"
    },
    "time_taken": "6.4650s"
  },
  {
    "test": 209,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_integer_overflow_benign_1.sol_IntegerOverflowBenign1.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Other"
    },
    "time_taken": "1.7279s"
  },
  {
    "test": 210,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77.sol_DepositProxy.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "5.2445s"
  },
  {
    "test": 211,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_reentrancy_simple.sol_Reentrance.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: reentrancy"
    },
    "time_taken": "2.6124s"
  },
  {
    "test": 212,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_wallet_02_refund_nosub.sol_Wallet.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "3.8572s"
  },
  {
    "test": 213,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x96edbe868531bd23a6c05e9d0c424ea64fb1b78b.sol_PENNY_BY_PENNY.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe smart contract is vulnerable to reentrancy attacks due to the use of the `call` function in the `Collect` function. The `call` function can be used to execute arbitrary code, including a recursive call back into the original function. This can cause unintended behavior, such as draining the contract's funds or manipulating its state in unexpected ways.\n"
    },
    "time_taken": "8.9143s"
  },
  {
    "test": 214,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_integer_overflow_multitx_multifunc_feasible.sol_IntegerOverflowMultiTxMultiFuncFeasible.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: reentrancy"
    },
    "time_taken": "2.3145s"
  },
  {
    "test": 215,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0xe82f0742a71a02b9e9ffc142fdcb6eb1ed06fb87.sol_Freebie.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy"
    },
    "time_taken": "3.4302s"
  },
  {
    "test": 216,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x941d225236464a25eb18076df7da6a91d0f95e9e.sol_Log.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "8.0424s"
  },
  {
    "test": 217,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x663e4229142a27f00bafb5d087e1e730648314c3.sol_SaleClockAuctionERC20.json.hex.sol",
    "analysis": {
      "raw_response": ""
    },
    "time_taken": "0.9163s"
  },
  {
    "test": 218,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x78c2a1e91b52bca4130b6ed9edd9fbcfd4671c37.sol_WhaleGiveaway1.json.hex.sol",
    "analysis": {
      "raw_response": "  RATING: SAFE\nVulnerability_Type: Other"
    },
    "time_taken": "3.9357s"
  },
  {
    "test": 219,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_reentrancy_0x941d225236464a25eb18076df7da6a91d0f95e9e.sol_ETH_FUND.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe smart contract contains a reentrancy vulnerability in the `CashOut` function. The function calls an external contract using the `call` method, which transfers Ether to the target contract. However, the function does not check if the target contract has been modified or compromised, allowing an attacker to manipulate the state of the target contract and cause unintended behavior"
    },
    "time_taken": "6.4982s"
  },
  {
    "test": 220,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_phishable.sol_Phishable.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: unchecked_low_level_calls"
    },
    "time_taken": "2.5863s"
  },
  {
    "test": 221,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_tokensalechallenge.sol_TokenSaleChallenge.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: None"
    },
    "time_taken": "3.1441s"
  },
  {
    "test": 222,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_access_control_mapping_write.sol_Map.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: SAFE\nVulnerability Type: Other\n\nThe provided smart contract contains several vulnerabilities, but none of them are critical or severe. Here's a breakdown of the issues found in the contract:\n\n1. Unchecked low-level calls: The `withdraw` function uses the `.call` method to transfer Ether to the caller. However, it doesn't check if the call was successful or not. This could lead to the"
    },
    "time_taken": "6.4769s"
  },
  {
    "test": 223,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_arithmetic_timelock.sol_TimeLock.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Reentrancy\n\nThe smart contract is vulnerable to reentrancy attacks because it calls an external contract during the execution of a function, which could lead to unintended behavior or exploits. In this case, the `withdraw()` function calls an external contract with the `call{ gas: !stor_map_b[var_a] * 0x08fc, value:"
    },
    "time_taken": "6.5005s"
  },
  {
    "test": 224,
    "file_path": "./Contracts/Decompiled/Heimdall-rs/SmartBugs/Heimdall_unchecked_low_level_calls_0x8fd1e427396ddb511533cf9abdbebd0a7e08da35.sol_Token.json.hex.sol",
    "analysis": {
      "raw_response": "  Rating: VULNERABLE\nVulnerability Type: Unchecked Low-Level Calls\n\nThe smart contract uses the `call` function to call external contracts, but it does not perform any checks on the return value or revert in case of failure. This can lead to a vulnerability known as \"unchecked low-level calls,\" where an attacker can manipulate the behavior of the contract by manipulating the return values of the called functions.\n\nIn this"
    },
    "time_taken": "6.9168s"
  }
]